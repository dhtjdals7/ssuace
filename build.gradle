plugins
{
    id 'org.springframework.boot'           version '2.5.3'
    id 'io.spring.dependency-management'    version '1.0.11.RELEASE'
    id 'java'
}

group               = 'com.cafe24'
version             = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories
{
    mavenCentral()
}

dependencies
{
    implementation      'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation      'org.springframework.boot:spring-boot-starter-web'
    developmentOnly     'org.springframework.boot:spring-boot-devtools'
    testImplementation  'org.springframework.boot:spring-boot-starter-test'
    implementation      'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation      'org.springframework.boot:spring-boot-starter-jdbc:1.4.1.RELEASE'
    implementation      'mysql:mysql-connector-java:5.1.48'
    implementation      'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
}

def webappDir = "$projectDir/front"

sourceSets {
    main {
        resources {
            srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "buildReact"
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task installReact(type: Exec) {
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install'
    } else {
        commandLine "npm", "audit", "fix"
        commandLine 'npm', 'install'
    }
}

test
{
    useJUnitPlatform()
}

